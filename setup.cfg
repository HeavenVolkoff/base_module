## More info:
# https://setuptools.readthedocs.io/en/latest/setuptools.html
# https://packaging.python.org/guides/distributing-packages-using-setuptools
# https://www.python.org/dev/peps/pep-0345/#metadata-version

[venv]
extras =
    dev

[metadata]
url = https://github.com/HeavenVolkoff/foundation
name = foundation
author = Vítor Vasconcellos
version = 0.4.0
license = BSD-3-Clause
keywords =
    base
    modules
    package
    bootstrap
    foundation
maintainer = Vítor Vasconcellos
description = A simple foundation to build python packages
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3.6
    License :: OSI Approved :: BSD License :: 3-Clause "New" or "Revised" License (BSD-3-Clause)
    # https://pypi.org/pypi?%3Aaction=list_classifiers
download_url =
project_urls =
    Bug Tracker = https://github.com/HeavenVolkoff/foundation/issues
    Source Code = https://github.com/HeavenVolkoff/foundation
author_email = vasconcellos.dev@gmail.com
maintainer_email = vasconcellos.dev@gmail.com
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8

[options]
# bool
zip_safe = True
    # Indicates whether your package is able to be run from within a zip archive or not
# list-semi
setup_requires =
    pip >= 18.1, != 19.0
    setuptools >= 40.5.0
    # List all packages required in order to run your package's setup.py
# str
python_requires = >3.3
    # Define the required python interpreter version to run you package
# list-comma
eager_resources =
    # List of strings naming resources that should also be extracted from the zip
    # Only useful should the project be installed from a zipfile
# list-semi
install_requires =
    importlib_metadata >= 0.9
    # List your packages dependencies
# bool
include_package_data = False
    # Automatically include in your package any data file declared inside MANIFEST.in
    # If possible, it is recommended to use package_data and exclude_package_data instead

# Put data files outside package (This section requires setuptools >= 40.5.0)
[options.data_files]
# install_location = files_path, ...

# Define executable entry-points to this package
[options.entry_points]
gui_scripts =
    # foo = my_package.__main__:main_gui
console_scripts =
    # baz = my_package.__main__:main
distutils.commands =
    # baz = my_package:dist_util_command_class

# Put data files inside package
[options.package_data]
* = py.typed
# package_name = files_pattern, ...

# Extra dependencies, can be installed with: `pip install package[extra]`
[options.extras_require]
# extra_name = requirements, ...
dev =
    twine
    black
    isort
    venvtools
    # Put your development requirements here
docs =
    # Put your documentation requirements here
tests =
    # Put your tests requirements here

# Remove data files from inside package
[options.exclude_package_data]
# package_name = files_pattern, ...
