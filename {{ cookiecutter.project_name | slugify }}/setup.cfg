## More info:
# https://setuptools.readthedocs.io/en/latest/setuptools.html
# https://packaging.python.org/guides/distributing-packages-using-setuptools
# https://www.python.org/dev/peps/pep-0345/#metadata-version

[metadata]
url = {{ cookiecutter.project_url }}
name = {{ cookiecutter.project_slug | slugify  }}
version = 0.0.1
license = {{ cookiecutter.project_license }}
{% if cookiecutter.project_keywords -%}
keywords =
    {{ "\n    ".join(cookiecutter.project_keywords.split()).strip() }}
{% endif -%}
author = {{ cookiecutter.author_name }}
author_email = {{ cookiecutter.author_email }}
{% if cookiecutter.maintainer_name and cookiecutter.maintainer_email -%}
maintainer = {{ cookiecutter.maintainer_name }}
maintainer_email = {{ cookiecutter.maintainer_email }}
{% endif -%}
description = {{ cookiecutter.project_description }}
classifiers =
    Development Status :: 1 - Planning
#   TODO: Add classifiers from https://pypi.org/pypi?%3Aaction=list_classifiers
{% if cookiecutter.project_license not in ("LicenseRef-Proprietary", "LicenseRef-Public-Domain") -%}
license-file = LICENSE
{% endif -%}
{% if cookiecutter.project_download_url -%}
download_url = {{ cookiecutter.project_download_url }}
{% endif -%}
{% if cookiecutter.project_source_code or cookiecutter.project_bug_tracker -%}
project_urls =
{% if cookiecutter.project_source_code -%}
    Bug Tracker = {{ cookiecutter.project_source_code }}
{% endif -%}
{% if cookiecutter.project_bug_tracker -%}
    Source Code = {{ cookiecutter.project_bug_tracker }}
{% endif -%}
{% endif -%}
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8

[options]
# str
{% if "." in cookiecutter.project_slug -%}
packages = find_namespace:
{% else -%}
pakages = find:
{% endif -%}
#   Indicates which packages shoud be included in this module
#   find: and find_namespace: will automatically find all packages
# bool
zip_safe = True
#   Indicates whether your package is able to be run from within a zip archive or not
# list-semi
setup_requires =
    pip >= 18.1, != 19.0
    setuptools >= 40.5.0
#   List all packages required in order to run your package's setup.py
# str
python_requires = ~={{ cookiecutter.minimum_python_version }}
#   Define the required python interpreter version to run you package
# list-comma
# eager_resources =
#   List of strings naming resources that should also be extracted from the zip
#   Only useful should the project be installed from a zipfile
# list-semi
install_requires =
    importlib_metadata
#   TODO: Add your packages dependencies
# bool
include_package_data = False
#   Automatically include in your package any data file declared inside MANIFEST.in
#   If possible, it is recommended to use package_data and exclude_package_data instead

# Put data files outside package (This section requires setuptools >= 40.5.0)
# [options.data_files]
#  install_location = files_path, ...

# Define executable entry-points to this package
# [options.entry_points]
# gui_scripts =
#     foo = my_package.__main__:main_gui
# console_scripts =
#     baz = my_package.__main__:main
# distutils.commands =
#     baz = my_package:dist_util_command_class

# Put data files inside package
[options.package_data]
* = py.typed
# package_name = files_pattern, ...

# Custom options for automatic package search
[options.packages.find]
{% if "." in cookiecutter.project_slug -%}
# list-semi
include =
    {{ cookiecutter.project_slug.split(".")[0] }}.*
{% endif -%}
# list-semi
exclude =
    tests

# Extra dependencies, can be installed with: `pip install package[extra]`
[options.extras_require]
# list-semi
dev =
    mypy
    twine
    black
    isort
    venvtools
#   TODO: Add your development dependencies
# list-semi
docs =
#   TODO: Add your documentation dependencies
# list-semi
tests =
#   TODO: Add your tests dependencies 

# Remove data files from inside package
# [options.exclude_package_data]
#  package_name = files_pattern, ...

[venv]
extras =
    dev
    docs
    tests

[mypy]
pretty = True
ignore_errors = False
color_output = True
error_summary = True
follow_imports = normal
implicit_reexport = True
python_executable = ./.venv/bin/python
check_untyped_defs = True

allow_redefinition = False
allow_untyped_globals = False

no_implicit_optional = True
no_silence_site_packages = False

strict = True
strict_optional = True
strict_equality = True

show_error_codes = True
show_none_errors = True
show_error_context = True
show_column_numbers = True

warn_no_return = True
warn_return_any = True
warn_unreachable = True
warn_redundant_casts = True

disallow_any_expr = False
disallow_any_explicit = False
disallow_any_generics = True
disallow_any_decorated = False
disallow_any_unimported = True
disallow_subclassing_any = True
disallow_untyped_defs = True
disallow_untyped_calls = True
disallow_untyped_decorators = True
disallow_incomplete_defs = True
